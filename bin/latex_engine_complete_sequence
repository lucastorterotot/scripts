#!/bin/bash

nbcompilmax=5
clean_aux_files=1
compiler=lualatex
for arg in "$@"; do
    case "$arg" in
        -nc)
            clean_aux_files=0
            shift
            ;;
        -lua)
            compiler=lualatex
            shift
            ;;
        -pdf)
            compiler=pdflatex
            shift
            ;;
    esac
done
for arg in "$@"; do
    argnotex=${arg%.*}
    file=$(basename $argnotex)
    nbcompil=1
    continue_workflow=1
    $compiler -shell-escape -draftmode -interaction=batchmode -halt-on-error $argnotex || continue_workflow=0
    if [[ $compiler == "lualatex" ]]
    then
        printf '\n'
    fi
    if [[ $continue_workflow == 1 ]]
    then
        sleep 0.25
        if [ -e $file.bcf ]
        then
            biber $file
        elif [ -e $file-blx.bib ] && [ -e $file.aux ] 
        then
            bibtex $file.aux
        fi &
        if [ -e $file.idx ]
        then
            makeindex $file.idx
        fi &
        for mpfile in $(find . -maxdepth 1 -type f -iname \*.mp) ; do
            mpost $mpfile &
        done
        wait
        sleep 0.25
    fi
    while ((nbcompil < nbcompilmax)) && [[ $continue_workflow == 1 ]]; do
        ((nbcompil++))
        printf '\n\t' ; printf "$compiler run $nbcompil...\n\n"
        $compiler -shell-escape -interaction=batchmode -halt-on-error $argnotex || continue_workflow=0
        if [[ $compiler == "lualatex" ]]
        then
            printf '\n'
        fi
        if [[ $(grep -l $file.log -e 'Rerun to get cross-references right' -e 'undefined references' -e 'undefined on input line') != $file.log ]] && [[ $continue_workflow == 1 ]]
        then
            continue_workflow=-1
        fi
    done
    if [[ $continue_workflow == 0 ]]
    then
        printf "\n\t$compiler failed at run $nbcompil.\n\tFile: $arg"
        printf "\n\tLogs:\n\n"
        grep ^\! $file.log -A 4
        break
    fi
    printf '\n\t' ; printf $nbcompil ; printf ' compilations.\n\n'
    if [[ $clean_aux_files == 1 ]]
    then
        _lt_rmrf_for_windows_dropbox -s *.1 *.mp *.t1 &
        _lt_rmrf_for_windows_dropbox -s $file.aux $file.out $file.toc $file.lof $file.lot $file.mw $file.nav $file.snm $file.synctex.gz $file.maf $file.mtc $file.ptc $file.bcf $file.bbl $file.run.xml $file-blx.bib $file.idx $file.ilg $file.ind $file.w18 &
        _lt_rmrf_for_windows_dropbox -s $file-*.cpt &
        _lt_rmrf_for_windows_dropbox -s $file.mtc* &
        _lt_rmrf_for_windows_dropbox -s _minted-$file &
    fi
    ([ -s liste-exos_de_cours.tex ] && (sed -i "s|^input|\\\input|g" liste-exos_de_cours.tex ; sed -i "s|$enseignement_db/|\\\eDBdir|g" liste-exos_de_cours.tex ; sed -i "s|$HOME|\\\homedir|g" liste-exos_de_cours.tex) || _lt_rmrf_for_windows_dropbox liste-exos_de_cours.tex) &
    wait
done
